{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","newGroundPrefab","type","Prefab","redPointPrefab","stickPrefab","ground","Node","player","scoreDisplay","Label","gameoverDisplay","perfectDisplay","playerDestination","isMoving","touchStart","touchEnd","collision","stick","newGround","beyond","startPosition","onLoad","enabled","spawnStick","spawnNewGround","score","onEnable","node","once","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","calculateCollision","successAction","failAction","setScore","string","startCollisionPoint","x","width","endCollisionPoint","startCollisionRedPoint","data","endCollisionRedPoint","destination","height","isCollision","isPerfect","perfect","getTime","distance","speed","playerMoveTime","stickComebackTime","comebackTime","tween","delay","to","angle","call","position","v2","y","start","destroy","active","by","director","loadScene","randomInteger","min","max","rand","Math","random","floor","spawnRedPoint","instantiate","newStick","addChild","anchorY","getComponent","game","newRedPoint","minWidthNewGround","maxWidthNewGround","newGroundPos","getNewGroundPosition","time","newGroundWidth","groundY","minX","maxX","randX"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        newGroundPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        redPointPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        stickPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        gameoverDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        perfectDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        playerDestination: 'none',\r\n        isMoving: false,\r\n        touchStart: false,\r\n        touchEnd: false,\r\n        collision: false,\r\n        stick: null,\r\n        newGround: null,\r\n        beyond: -500,\r\n        startPosition: -300,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.gameoverDisplay.enabled = false;\r\n        this.perfectDisplay.enabled = false;\r\n        this.stick = this.spawnStick();\r\n        this.newGround = this.spawnNewGround();\r\n        this.score = 0;\r\n    },\r\n\r\n    onEnable() {\r\n        this.node.once(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.once(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n    },\r\n\r\n\r\n    onTouchStart() {\r\n        this.touchStart = true;\r\n        this.touchEnd = false;\r\n    },\r\n\r\n\r\n    onTouchEnd() {\r\n        this.touchStart = false;\r\n        this.touchEnd = true;\r\n        if (this.calculateCollision()) {\r\n            this.successAction();\r\n        } else {\r\n            this.failAction();\r\n        }\r\n\r\n    },\r\n\r\n    setScore: function () {\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n    },\r\n\r\n    calculateCollision() {\r\n        const startCollisionPoint = this.newGround.x - this.newGround.width / 2;\r\n        const endCollisionPoint = this.newGround.x + this.newGround.width / 2;\r\n        const startCollisionRedPoint = this.newGround.x - this.redPointPrefab.data.width / 2;\r\n        const endCollisionRedPoint = this.newGround.x + this.redPointPrefab.data.width / 2\r\n        const destination = this.stick.x + this.stick.height;\r\n        const isCollision = destination >= startCollisionPoint && destination <= endCollisionPoint;\r\n        const isPerfect = destination >= startCollisionRedPoint && destination <= endCollisionRedPoint;\r\n        if (isCollision && !isPerfect) {\r\n            this.score += 1;\r\n        } else if (isPerfect) {\r\n            this.score += 2;\r\n            this.perfect = true;\r\n        }\r\n        return isCollision;\r\n    },\r\n\r\n    getTime(distance, speed = 500) {\r\n        return distance / speed;\r\n    },\r\n\r\n    successAction() {\r\n        const playerMoveTime = this.getTime(this.playerDestination - this.player.x);\r\n        const stickComebackTime = this.getTime((this.newGround.x - this.stick.x) + this.newGround.width / 2);\r\n        const comebackTime = this.getTime(this.newGround.x - this.startPosition);\r\n        cc.tween(this.stick).delay(0.3).to(0.4, { angle: -90 })\r\n            .call(() => {\r\n                this.perfectDisplay.enabled = this.perfect;\r\n                cc.tween(this.player).to(playerMoveTime, { position: cc.v2(this.playerDestination, this.stick.y) })\r\n                    .call(() => {\r\n                        this.perfect = false;\r\n                        this.perfectDisplay.enabled = false;\r\n                        cc.tween(this.newGround)\r\n                            .to(comebackTime, { position: cc.v2(this.startPosition, this.ground.y) })\r\n                            .start()\r\n                    })\r\n                    .call(() => {\r\n                        cc.tween(this.player)\r\n                            .to(comebackTime, { position: cc.v2((this.startPosition + this.newGround.width / 2) - 20, this.stick.y) })\r\n                            .start()\r\n                    })\r\n                    .call(() => {\r\n                        cc.tween(this.stick)\r\n                            .to(stickComebackTime, { position: cc.v2(this.stick.x - (this.newGround.x - this.stick.x + this.newGround.width / 2), this.stick.y) })\r\n                            .start()\r\n                    })\r\n                    .call(() => {\r\n                        cc.tween(this.ground)\r\n                            .to(comebackTime, { position: cc.v2(-800, this.ground.y) })\r\n                            .call(() => {\r\n                                this.ground.destroy();\r\n                                this.ground = this.newGround;\r\n                                this.stick.active = false;\r\n                                this.stick = this.spawnStick();\r\n                                this.newGround = this.spawnNewGround();\r\n                                this.node.once(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n                                this.node.once(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n                            }).start()\r\n                    }).start()\r\n            })\r\n            .call(() => this.setScore()).start()\r\n            .start();\r\n    },\r\n\r\n    failAction() {\r\n        const playerMoveTime = this.getTime(this.stick.height);\r\n        cc.tween(this.stick).delay(0.3).to(0.4, { angle: -90 })\r\n            .call(() => {\r\n                cc.tween(this.player).to(playerMoveTime, { position: cc.v2(this.player.x + this.stick.height, this.stick.y) })\r\n                    .call(() => { cc.tween(this.stick).to(0.4, { angle: -180 }).start() })\r\n                    .call(() => {\r\n                        cc.tween(this.player).by(0.3, { position: cc.v2(0, -350) })\r\n                            .call(() => this.gameoverDisplay.enabled = true)\r\n                            .delay(1)\r\n                            .call(() => cc.director.loadScene('game')).start()\r\n                    }).start()\r\n            }).start();\r\n    },\r\n\r\n    randomInteger(min, max) {\r\n        const rand = min + Math.random() * (max + 1 - min);\r\n        return Math.floor(rand);\r\n    },\r\n\r\n    spawnRedPoint() {\r\n        return cc.instantiate(this.redPointPrefab);\r\n    },\r\n\r\n    spawnStick() {\r\n        const newStick = cc.instantiate(this.stickPrefab);\r\n        this.node.addChild(newStick);\r\n        newStick.anchorY = 0;\r\n        newStick.y = this.ground.y + this.ground.height / 2;\r\n        newStick.x = this.startPosition + this.ground.width / 2;\r\n        newStick.getComponent('Stick').game = this;\r\n        return newStick;\r\n    },\r\n\r\n    spawnNewGround() {\r\n        const newGround = cc.instantiate(this.newGroundPrefab);\r\n        newGround.x = 500;\r\n        newGround.y = this.ground.y;\r\n        this.node.addChild(newGround);\r\n        const newRedPoint = this.spawnRedPoint();\r\n        newGround.addChild(newRedPoint);\r\n        newRedPoint.y = this.ground.height / 2 - newRedPoint.height / 2;\r\n        const minWidthNewGround = 30;\r\n        const maxWidthNewGround = 150;\r\n        const newGroundPos = this.getNewGroundPosition(newGround.width);\r\n        newGround.width = this.randomInteger(minWidthNewGround, maxWidthNewGround);\r\n        this.playerDestination = (newGroundPos.x + newGround.width / 2) - 20;\r\n        const time = this.getTime(newGround.x - newGroundPos.x, 1000);\r\n        cc.tween(newGround).to(time, { position: newGroundPos }).start()\r\n        return newGround;\r\n    },\r\n\r\n\r\n    getNewGroundPosition(newGroundWidth) {\r\n        const groundY = this.ground.y;\r\n        const minX = -(this.node.width / 2) + 150 + (newGroundWidth / 2) + 5;\r\n        const maxX = (this.node.width / 2) - (newGroundWidth / 2);\r\n        const randX = this.randomInteger(minX, maxX);\r\n        return cc.v2(randX, groundY);\r\n    },\r\n\r\n\r\n    //start() {},\r\n\r\n    //update(dt) {},\r\n});\r\n"]}