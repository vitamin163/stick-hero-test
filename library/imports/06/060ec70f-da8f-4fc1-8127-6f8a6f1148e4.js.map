{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["async","require","cc","Class","Component","properties","newGroundPrefab","type","Prefab","redPointPrefab","stickPrefab","ground","Node","player","scoreDisplay","Label","playerDestination","isMoving","touchStart","touchEnd","collision","stick","newGround","beyond","startPosition","onLoad","spawnStick","spawnNewGround","getComponent","game","score","onEnable","node","once","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","calculateCollision","successAction","failAction","gainScore","string","startCollisionPoint","x","width","endCollisionPoint","startCollisionRedPoint","data","endCollisionRedPoint","destination","height","isCollision","isPerfect","tween","to","rotation","call","position","v2","y","start","destroy","active","by","delay","director","loadScene","randomInteger","min","max","rand","Math","random","floor","spawnRedPoint","instantiate","newStick","addChild","anchorY","newRedPoint","minWidthNewGround","maxWidthNewGround","setPosition","getNewGroundPosition","newGroundWidth","groundY","minX","maxX","randX","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["var async = require(\"async\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        newGroundPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        redPointPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        stickPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        playerDestination: 'none',\r\n        isMoving: false,\r\n        touchStart: false,\r\n        touchEnd: false,\r\n        collision: false,\r\n        stick: null,\r\n        newGround: null,\r\n        beyond: -500,\r\n        startPosition: -300,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.stick = this.spawnStick();\r\n        this.newGround = this.spawnNewGround();\r\n        this.player.getComponent('Player').game = this;\r\n        this.score = 0;\r\n    },\r\n\r\n    onEnable() {\r\n        this.node.once(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.once(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n    },\r\n\r\n\r\n    onTouchStart() {\r\n        this.touchStart = true;\r\n        this.touchEnd = false;\r\n    },\r\n\r\n\r\n    onTouchEnd() {\r\n        this.touchStart = false;\r\n        this.touchEnd = true;\r\n        if (this.calculateCollision()) {\r\n            this.successAction();\r\n        } else {\r\n            this.failAction();\r\n        }\r\n\r\n    },\r\n\r\n\r\n    gainScore: function () {\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n    },\r\n\r\n    calculateCollision() {\r\n        const startCollisionPoint = this.newGround.x - this.newGround.width / 2;\r\n        const endCollisionPoint = this.newGround.x + this.newGround.width / 2;\r\n        const startCollisionRedPoint = this.newGround.x - this.redPointPrefab.data.width / 2;\r\n        const endCollisionRedPoint = this.newGround.x + this.redPointPrefab.data.width / 2;\r\n        const destination = this.stick.x + this.stick.height;\r\n        const isCollision = destination >= startCollisionPoint && destination <= endCollisionPoint;\r\n        const isPerfect = destination >= startCollisionRedPoint && destination <= endCollisionRedPoint;\r\n        if (isCollision && !isPerfect) {\r\n            this.score += 1;\r\n        } else if (isPerfect) {\r\n            this.score += 2;\r\n        }\r\n        return isCollision;\r\n    },\r\n\r\n    successAction() {\r\n        cc.tween(this.stick).to(0.5, { rotation: 90 })\r\n            .call(() => {\r\n                cc.tween(this.player).to(1, { position: cc.v2(this.playerDestination, this.stick.y) })\r\n                    .call(() => {\r\n                        cc.tween(this.newGround)\r\n                            .to(1, { position: cc.v2(this.startPosition, this.ground.y) })\r\n                            .start()\r\n                    })\r\n                    .call(() => {\r\n                        cc.tween(this.player)\r\n                            .to(1, { position: cc.v2((this.startPosition + this.newGround.width / 2) - 20, this.stick.y) })\r\n                            .start()\r\n                    })\r\n                    .call(() => {\r\n                        cc.tween(this.stick)\r\n                            .to(1, { position: cc.v2(this.startPosition - this.stick.height, this.stick.y) })\r\n                            .start()\r\n                    })\r\n                    .call(() => {\r\n                        cc.tween(this.ground)\r\n                            .to(1, { position: cc.v2(-800, this.ground.y) })\r\n                            .call(() => this.ground.destroy())\r\n                            .call(() => this.ground = this.newGround)\r\n                            .call(() => {\r\n                                this.stick.active = false;\r\n                                this.stick = this.spawnStick();\r\n                                this.newGround = this.spawnNewGround();\r\n                                this.node.once(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n                                this.node.once(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n                            })\r\n                            .start()\r\n                    })\r\n\r\n\r\n                    .start()\r\n            })\r\n            .call(() => this.gainScore()).start()\r\n            .start();\r\n\r\n    },\r\n\r\n    failAction() {\r\n        cc.tween(this.stick).to(0.5, { rotation: 90 })\r\n            .call(() => {\r\n                cc.tween(this.player).to(1, { position: cc.v2(this.player.x + this.stick.height, this.stick.y) })\r\n                    .call(() => { cc.tween(this.stick).to(0.5, { rotation: 180 }).start() })\r\n                    .call(() => {\r\n                        cc.tween(this.player).by(0.5, { position: cc.v2(0, -350) })\r\n                            .delay(1).call(() => cc.director.loadScene('game')).start()\r\n                    })\r\n\r\n                    .start()\r\n            })\r\n\r\n            .start();\r\n\r\n\r\n    },\r\n\r\n    randomInteger(min, max) {\r\n        const rand = min + Math.random() * (max + 1 - min);\r\n        return Math.floor(rand);\r\n    },\r\n\r\n    spawnRedPoint() {\r\n        return cc.instantiate(this.redPointPrefab);\r\n    },\r\n\r\n    spawnStick() {\r\n        const newStick = cc.instantiate(this.stickPrefab);\r\n        this.node.addChild(newStick);\r\n        newStick.anchorY = 0;\r\n        newStick.y = this.ground.y + this.ground.height / 2;\r\n        newStick.x = this.startPosition + this.ground.width / 2;\r\n        newStick.getComponent('Stick').game = this;\r\n        return newStick;\r\n    },\r\n\r\n    spawnNewGround() {\r\n        const newGround = cc.instantiate(this.newGroundPrefab);\r\n        this.node.addChild(newGround);\r\n        const newRedPoint = this.spawnRedPoint();\r\n        newGround.addChild(newRedPoint);\r\n        newRedPoint.y = this.ground.height / 2 - newRedPoint.height / 2;\r\n        const minWidthNewGround = 30;\r\n        const maxWidthNewGround = 150;\r\n        newGround.width = this.randomInteger(minWidthNewGround, maxWidthNewGround);\r\n        newGround.setPosition(this.getNewGroundPosition(newGround.width));\r\n        this.playerDestination = (newGround.x + newGround.width / 2) - 20;\r\n        return newGround;\r\n    },\r\n\r\n\r\n    getNewGroundPosition(newGroundWidth) {\r\n        const groundY = this.ground.y;\r\n        const minX = -(this.node.width / 2) + 150 + (newGroundWidth / 2) + 5;\r\n        const maxX = (this.node.width / 2) - (newGroundWidth / 2);\r\n        const randX = this.randomInteger(minX, maxX);\r\n        return cc.v2(randX, groundY);\r\n    },\r\n\r\n\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n\r\n    },\r\n});\r\n"]}